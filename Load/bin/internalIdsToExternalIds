#!/usr/bin/perl

use strict;
use DBI;

my $configFile = $ARGV[0];

usage() unless $configFile;

my $config = parseConfigFile($configFile);

my $dbh = DBI->connect($config->{dbConnectString}, $config->{dbLogin},
		       $config->{dbPassword}) or die DBI::errstr;

my $sql = "
select aa_sequence_id, source_id, three_letter_abbrev
from apidb.OrthomclTaxon ot, dots.ExternalAaSequence s
where ot.taxon_id = s.taxon_id
";

my $stmt = $dbh->prepare($sql) or die DBI::errstr;
$stmt->execute();
my $map = {};
while (my ($sequenceId, $sourceId, $taxonId) = $stmt->fetchrow_array()) {
  $map->{$sequenceId} = "$taxonId|$sourceId";
}


while(<STDIN>) {
  chomp;
  my @internalIds = split(/\s+/);
  my @externalIds;
  foreach my $internalId (@internalIds) {
    die "can't find source_id for aa_sequence_id $internalId\n"
      unless $map->{$internalId};
    push(@externalIds, $map->{$internalId});
  }
  print join(" ", @externalIds) . "\n";
}

sub usage {
  print STDERR "

temporary program to translate an mcl output file with internal sequence ids to an output file with external ids in standard format (pfa|PF11_0344)

usage: internalIdsToExternalIds config_file

(config_file is used for db connection info.  same as for orthomclEdges)

";
exit(1);
}


sub parseConfigFile {
  my ($configFile) = @_;

  open(F, $configFile) || die "Can't open config file '$configFile'\n";

  next if /^#/;
  my $config;
  while(<F>) {
    /(\w+)\=(.+)/ || "illegal line in config file '$_'\n";
    $config->{$1} = $2;
  }
  return $config;
}

