#!@perl@
use strict;

use lib "$ENV{GUS_HOME}/lib/perl";
use File::Basename;
use ApiCommonData::Load::Steps;
use ApiCommonData::Load::MakeTaskDirs;

my $propertiesFile = $ARGV[0];
my $printXML = $ARGV[1];

my ($mgr, $projectDir, $release, $allSpecies)
  = &initOrthomclAnalysis($propertiesFile, $printXML);

&copyPipelineDirToComputeCluster($mgr);

##############################################################################
########   The Pipeline                                               ########
##############################################################################


##### all proteomes vs all proteomes ncbi blastp #####

my $blastParams = "-F 'm S' -v 100000 -b 100000 -z 1300000 -e 1e-5";

my $minLength = 10;
my $maxStopCodonPercent = 20;
my $fetchSql = "select ot.three_letter_abbrev || '|' || x.source_id,sequence from dots.externalaasequence x, apidb.orthomcltaxon ot where ot.taxon_id = x.taxon_id";

&copyProteomeFile($mgr);

&documentBlast($mgr, 'BLASTP', "Protein sequences", "Protein sequences", $blastParams);

&createSimilarityDir($mgr,"Proteome","ProteinSeqs","(\\S+)","$blastParams","blastp", "ncbi", "printSimSeqs");

&createSimilarityDir($mgr,"Proteome","Proteome","(\\S+)","$blastParams","blastp", "ncbi", "printSimSeqs");

&extractProteinSeqs($mgr, "ProteinSeqs", $fetchSql, $minLength, $maxStopCodonPercent);

&copyFilesToComputeCluster($mgr,"Proteome-ProteinSeqs", "similarity");

&copyFilesToComputeCluster($mgr,"Proteome-Proteome", "similarity");

&copyFilesToComputeCluster($mgr,"ProteinSeqs.fsa","seqfiles");

&copyFilesToComputeCluster($mgr,"Proteome.fsa","seqfiles");

&startProteinBlastOnComputeCluster($mgr,"Proteome","ProteinSeqs","apidb");

&startProteinBlastOnComputeCluster($mgr,"Proteome","Proteome","apidb");

$mgr->waitForCluster("Proteome-ProteinSeqs blast similarity", "waitProteome-ProteinSeqs");

$mgr->waitForCluster("Proteome-Proteome blast similarity", "waitProteome-ProteinSeqs");

&copyFilesFromComputeCluster($mgr,"Proteome-ProteinSeqs", "similarity");

&copyFilesFromComputeCluster($mgr,"Proteome-Proteome", "similarity");

&mapProteomeToGroups($mgr);

&addIdsToGroupsFile($mgr);

$mgr->goodbye("Pipeline complete!\n");

