#!@perl@
use strict;

use lib "$ENV{GUS_HOME}/lib/perl";
use File::Basename;
use ApiCommonData::Load::Steps;
use ApiCommonData::Load::MakeTaskDirs;

my $propertiesFile = $ARGV[0];
my $printXML = $ARGV[1];

my ($mgr, $projectDir, $release, $allSpecies)
  = &initOrthomclAnalysis($propertiesFile, $printXML);

&copyPipelineDirToComputeCluster($mgr);

##############################################################################
########   The Pipeline                                               ########
##############################################################################

#my $blastParams = "-F 'm S' -v 100000 -b 100000 -z 1000000 -e 1e-5";
my $blastParams = "W=3 wordmask=seq+xnu T=1000 E=1e-5";
my $minLength = 10;
my $maxStopCodonPercent = 20;
my $fetchSql = "select aa_sequence_id, source_id, sequence FROM dots.externalaasequence";

&documentBlast($mgr, 'BLASTP', "Protein sequences", "Protein sequences", $blastParams);

&createSimilarityDir($mgr,"ProteinSeqs","ProteinSeqs","^>([0-9]+)","$blastParams Y=70502811","blastp");

&extractProteinSeqs($mgr, "ProteinSeqs", $fetchSql, $minLength, $maxStopCodonPercent);

&copyFilesToComputeCluster($mgr,"ProteinSeqs-ProteinSeqs", "similarity");

&startProteinBlastOnComputeCluster($mgr,"ProteinSeqs","ProteinSeqs","apidb");

$mgr->waitForCluster("ProteinSeqs blast similarity", "waitProteinSeqs-ProteinSeqs");

&copyFilesFromComputeCluster($mgr,"ProteinSeqs-ProteinSeqs", "similarity");

&loadProteinBlast($mgr, "ProteinSeqs-ProteinSeqs","DoTS::ExternalAASequence","DoTS::ExternalAASequence", '', '', '', '', '', '', '--noHSPs');
&loadProteinBlast($mgr, "ProteinSeqs-ProteinSeqs","DoTS::ExternalAASequence","DoTS::ExternalAASequence", '', '', '', '', '', '', '--noHSPs', '1790,1861');


my $insertInterproConfig = "$projectDir/$release/resources_pipeline/primary/downloads/InterproscanData/insertInterpro-config.xml";

#&loadIprscanResults($mgr,"pfam_iprscan", "INTERPRO","14.1",$insertInterproConfig, 'ExternalAASequence', '--srcIdColumn aa_sequence_id');


my $extDbName = "OrthoMCL";
my $extDbVersion = "2.0";

#&createExtDbAndDbRls($mgr, $extDbName, $extDbVersion);

#&loadOrthoMCLResults($mgr, $extDbName, $extDbVersion, "all_orthomcl.out");

#&updateOrthoMCLGroups($mgr, "dots.ExternalAaSequence");

#&updateOrthoMCLGroups($mgr, "muscle3.6");

&generateOrthomclDomainKeywords($mgr);

my $rbhFile = "$projectDir/$release/analysis_pipeline/primary/data/orthomclEng/master/mainresult/orthomcl.rbh";
my $svgTemplate = "$ENV{GUS_HOME}/data/OrthoMCLData/Load/svg.template";

# &createBiolayoutData($mgr, $rbhFile, $svgTemplate);

#
#
# Last step
#
$mgr->goodbye("Pipeline complete!\n");

