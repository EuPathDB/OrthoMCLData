#    orthomcl.conf
#    This file specifies the settings used for OrthoMCL ortholog clustering

#    DIR is your working dir, each project will be in one of its subdirectory
DIR=/Users/fengchen/ORTHOMCL/B/
#    Please specify full path to GG file and BPO file
GG_FILE=/Users/fengchen/ORTHOMCL/test.gg
BPO_FILE=/Users/fengchen/ORTHOMCL/test.bpo2
#    BPO_IDX_MODE is the mode to index your BPO file. Options: all or taxon
BPO_IDX_MODE=all

#    These three cutoffs will not be applied if they are commented out 
#PVALUE_CUTOFF=1e-5
#PIDENT_CUTOFF=0
PMATCH_CUTOFF=50

#    MAX_WEIGHT set the maximum weight for edges having BLAST E-value of 0.
#    Please refer to your BLAST result to find out the second smallest E-value
#    and use an appropriate value, e.g. 1e-316 => 317
MAX_WEIGHT=316

#    Use mcl-02-063 version
MCL=/Users/fengchen/mcl-02-063/shmcl/mcl
#    INFLATION serves as "fine-tune" function; increasing this value will 
#    increase clustering tightness (lead to smaller groups)
INFLATION=1.5

#    If you want to run OrthoMCL again, 
#    a) to continue a previous unfinished run
#    b) to use a different INFLATION value
#    c) to use a different list of taxa
#FORMER_RUN_SUBDIR=
#    Set TAXA_LIST to a space delimited list of genome abbreviations
#    e.g. "ath hsa eco"
#TAXA_LIST=

#########################################################
#    Advanced options if you know what you are doing    #
#########################################################

#    PIPELINE_STOP should be used if users want to parallelize OrthoMCL graph 
#    construction: sequential identifications of in-paralogs within species
#    or orthologs from a pair of species can be run in parallel by setting 
#    TAXA_LIST (see above) or using appropriate GG files. 
#    Setting PIPELINE_STOP to appropriate values will prevent OrthoMCL 
#    proceed to non-parallel parts of the pipeline:
#    1: stop after in-paralog identifications; (co-)ortholog identifications
#       can't proceed without all in-paralog identifications finished.
#       After this, please continue OrthoMCL analysis by setting
#       PIPELINE_STOP to 2 and setting FORMER_RUN_SUBDIR.
#    2: stop after (co-)ortholog identifications. After this the pipeline
#       can only be run in a non-parallel fashion by commenting out
#       PIPELINE_STOP line and setting FORMER_RUN_SUBDIR.
PIPELINE_STOP=1
